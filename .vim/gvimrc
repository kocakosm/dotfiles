" Enable right-click's contextual menu
set mousemodel=popup
" set mousemodel=popup_setpos

" Ask to save modified files before operations like :q
set confirm

" GUI specific font
set guifont=RobotoMono\ Nerd\ Font\ 12

" Line spacing
" set linespace=2

" Remove the toolbar
set guioptions-=T

" Remove the right scrollbar
set guioptions-=r
set guioptions-=R

" Remove the left scrollbar
set guioptions-=l
set guioptions-=L

" Remove the menu
set guioptions-=m

" Disable menu tearoff
set guioptions-=t

" Keep the window size when adding/removing a scrollbar, a tabline, etc...
set guioptions+=k

" Custom tabs label
set guitablabel=%t\ %m

" Enable visual bell
set visualbell

" Easily change font size
" command! BiggerFont :let &guifont=substitute(&guifont, '\d\+$', '\=submatch(0)+1', '')
" command! SmallerFont :let &guifont=substitute(&guifont, '\d\+$', '\=submatch(0)-1', '')
" nnoremap <silent> <c-scrollwheelup> <cmd>BiggerFont<cr>
" inoremap <silent> <c-scrollwheelup> <cmd>BiggerFont<cr>
" nnoremap <silent> <c-scrollwheeldown> <cmd>SmallerFont<cr>
" inoremap <silent> <c-scrollwheeldown> <cmd>SmallerFont<cr>

function! s:update_gui_theme_variant(variant) abort
  if a:variant ==? 'dark'
    set guioptions+=d
  elseif a:variant ==? 'light'
    set guioptions-=d
  else
    throw 'Unsupported theme variant: ' . a:variant
  endif
endfunction

call s:update_gui_theme_variant(&background)

augroup UpdateGuiThemeVariant
  autocmd!
  autocmd OptionSet background call <sid>update_gui_theme_variant(v:option_new)
augroup END
